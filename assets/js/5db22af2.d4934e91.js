"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2556],{51928:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var r=t(17624),o=t(95788);const i={date:new Date("2019-03-22T00:00:00.000Z"),title:"dkron agent",slug:"dkron_agent",url:"/v1.2/cli/dkron_agent/"},s=void 0,a={id:"cli/dkron_agent",title:"dkron agent",description:"dkron agent",source:"@site/versioned_docs/version-v1/cli/dkron_agent.md",sourceDirName:"cli",slug:"/cli/dkron_agent",permalink:"/docs/v1/cli/dkron_agent",draft:!1,unlisted:!1,editUrl:"https://github.com/distribworks/dkron/tree/main/website/docs/versioned_docs/version-v1/cli/dkron_agent.md",tags:[],version:"v1",frontMatter:{date:"2019-03-22T00:00:00.000Z",title:"dkron agent",slug:"dkron_agent",url:"/v1.2/cli/dkron_agent/"},sidebar:"tutorialSidebar",previous:{title:"dkron",permalink:"/docs/v1/cli/dkron"},next:{title:"dkron doc",permalink:"/docs/v1/cli/dkron_doc"}},d={},l=[{value:"dkron agent",id:"dkron-agent",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3},{value:"Auto generated by spf13/cobra on 22-Mar-2019",id:"auto-generated-by-spf13cobra-on-22-mar-2019",level:6}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h6:"h6",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.MN)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"dkron-agent",children:"dkron agent"}),"\n",(0,r.jsx)(n.p,{children:"Start a dkron agent"}),"\n",(0,r.jsx)(n.h3,{id:"synopsis",children:"Synopsis"}),"\n",(0,r.jsx)(n.p,{children:"Start a dkron agent that schedule jobs, listen for executions and run executors.\nIt also runs a web UI."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"dkron agent [flags]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'      --advertise-addr string        Address used to advertise to other nodes in the cluster. By default, the bind address is advertised\n      --advertise-rpc-port int       Use the value of rpc-port by default\n      --backend string               Store backend (etcd|etcdv3|consul|zk|redis|boltdb|dynamodb) (default "boltdb")\n      --backend-machine strings      Store backend machines addresses (default [./dkron.db])\n      --backend-password string      Store backend machines password or token, only REDIS/CONSUL\n      --bind-addr string             Address to bind network listeners to (default "0.0.0.0:8946")\n      --dog-statsd-addr string       DataDog Agent address\n      --dog-statsd-tags strings      Datadog tags, specified as key:value\n      --encrypt string               Key for encrypting network traffic. Must be a base64-encoded 16-byte key\n  -h, --help                         help for agent\n      --http-addr string             Address to bind the UI web server to. Only used when server (default ":8080")\n      --join strings                 An initial agent to join with. This flag can be specified multiple times\n      --keyspace string              The keyspace to use. A prefix under all data is stored for this instance (default "dkron")\n      --log-level string             Log level (debug|info|warn|error|fatal|panic) (default "info")\n      --mail-from string             From email address to use\n      --mail-host string             Mail server host address to use for notifications\n      --mail-password string         Mail server password to use\n      --mail-payload string          Notification mail payload\n      --mail-port uint16             Mail server port\n      --mail-subject-prefix string   Notification mail subject prefix (default "[Dkron]")\n      --mail-username string         Mail server username used for authentication\n      --node-name string             Name of this node. Must be unique in the cluster (default "pris.local")\n      --profile string               Profile is used to control the timing profiles used (default "lan")\n      --rpc-port int                 RPC Port used to communicate with clients. Only used when server. The RPC IP Address will be the same as the bind address (default 6868)\n      --server                       This node is running in server mode\n      --statsd-addr string           Statsd address\n      --tag strings                  Tag can be specified multiple times to attach multiple key/value tag pairs to the given node, specified as key=value\n      --webhook-header strings       Headers to use when calling the webhook URL. Can be specified multiple times\n      --webhook-payload string       Body of the POST request to send on webhook call\n      --webhook-url string           Webhook url to call for notifications\n'})}),"\n",(0,r.jsx)(n.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"      --config string   config file path\n"})}),"\n",(0,r.jsx)(n.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/v1/cli/dkron/",children:"dkron"}),"\t - Open source distributed job scheduling system"]}),"\n"]}),"\n",(0,r.jsx)(n.h6,{id:"auto-generated-by-spf13cobra-on-22-mar-2019",children:"Auto generated by spf13/cobra on 22-Mar-2019"})]})}function u(e={}){const{wrapper:n}={...(0,o.MN)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},95788:(e,n,t)=>{t.d(n,{MN:()=>l});var r=t(11504);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var d=r.createContext({}),l=function(e){var n=r.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,d=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=l(t),f=o,g=p["".concat(d,".").concat(f)]||p[f]||c[f]||i;return t?r.createElement(g,s(s({ref:n},u),{},{components:t})):r.createElement(g,s({ref:n},u))}));u.displayName="MDXCreateElement"}}]);